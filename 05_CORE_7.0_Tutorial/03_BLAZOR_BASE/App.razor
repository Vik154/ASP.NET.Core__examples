@using Microsoft.AspNetCore.Components.Web      @* Для обраюотчиков событий *@
@using _03_BLAZOR_BASE.Components               @* Вложенные компоненты *@

@* Отображение вложенных компонентов *@
<h1>Home Component</h1>
<Home></Home>

<Home Count="@users.Count" Users="@users"></Home>

@code {
    List<string> users = new List<string> { "Tom", "Bob", "Sam", "Mike" };
}

<h1>HelloWorld.com</h1>
<h2>Первое приложение на blazor</h2>

@*              --- Пример добаления компонентов ---
Компонент, как и обычные классы C#, может определять переменные, которые хранят 
состояние компонента, и методы, которые определяют логику компонента, например, 
обработку событий элементов визуального интерфейса.
Все методы, переменные и свойства компонента определяются внутри блока @code. 
*@

@code {
    string Msg { get; } = "Hello";
    string name = "Admin";
    string DisplayTime() => $"Current time: {DateTime.Now.ToString("HH:mm:ss")}";
}

<h1>@Msg @name</h1>
<h2>@DisplayTime()</h2>

@* -- Рендеринг html -- *@
<div>@((MarkupString)html)</div>

@code {
    string html = "<h1>HelloWorld.com</h1>";
}

@* --- Компоненты статические --- *@
<link href="/css/style.css" rel="stylesheet" type="text/css">

<h1>Hello @name</h1>
<h3>CUBE</h3>

<img alt="Cube" src="/images/cube.jpg" />


@* --- Рендеринг компонента --- *@
<h1>Рендеринг компонента</h1>

<button @onclick="Click">+</button>
<span>@currentCount</span>

@code {
    private int currentCount = 0;
    private void Click() => currentCount++;
}